// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUI_Calculator.BasicClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class Basic
    {
        
        #region Properties
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow10
        {
            get
            {
                if ((this.mUIItemWindow10 == null))
                {
                    this.mUIItemWindow10 = new UIItemWindow10(this);
                }
                return this.mUIItemWindow10;
            }
        }
        
        public UIItemWindow11 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow12 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIItemWindow13 UIItemWindow13
        {
            get
            {
                if ((this.mUIItemWindow13 == null))
                {
                    this.mUIItemWindow13 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow13;
            }
        }
        
        public UIItemWindow14 UIItemWindow14
        {
            get
            {
                if ((this.mUIItemWindow14 == null))
                {
                    this.mUIItemWindow14 = new UIItemWindow14(this);
                }
                return this.mUIItemWindow14;
            }
        }
        
        public UIItemWindow15 UIItemWindow15
        {
            get
            {
                if ((this.mUIItemWindow15 == null))
                {
                    this.mUIItemWindow15 = new UIItemWindow15(this);
                }
                return this.mUIItemWindow15;
            }
        }
        
        public UIItemWindow16 UIItemWindow16
        {
            get
            {
                if ((this.mUIItemWindow16 == null))
                {
                    this.mUIItemWindow16 = new UIItemWindow16(this);
                }
                return this.mUIItemWindow16;
            }
        }
        
        public UIItemWindow17 UIItemWindow17
        {
            get
            {
                if ((this.mUIItemWindow17 == null))
                {
                    this.mUIItemWindow17 = new UIItemWindow17(this);
                }
                return this.mUIItemWindow17;
            }
        }
        
        public UIItemWindow18 UIItemWindow18
        {
            get
            {
                if ((this.mUIItemWindow18 == null))
                {
                    this.mUIItemWindow18 = new UIItemWindow18(this);
                }
                return this.mUIItemWindow18;
            }
        }
        
        public UIItemWindow19 UIItemWindow19
        {
            get
            {
                if ((this.mUIItemWindow19 == null))
                {
                    this.mUIItemWindow19 = new UIItemWindow19(this);
                }
                return this.mUIItemWindow19;
            }
        }
        
        public UIItemWindow20 UIItemWindow20
        {
            get
            {
                if ((this.mUIItemWindow20 == null))
                {
                    this.mUIItemWindow20 = new UIItemWindow20(this);
                }
                return this.mUIItemWindow20;
            }
        }
        
        public UIItemWindow21 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow21;
            }
        }
        
        public UIItemWindow22 UIItemWindow22
        {
            get
            {
                if ((this.mUIItemWindow22 == null))
                {
                    this.mUIItemWindow22 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow22;
            }
        }
        
        public UIItemWindow23 UIItemWindow23
        {
            get
            {
                if ((this.mUIItemWindow23 == null))
                {
                    this.mUIItemWindow23 = new UIItemWindow23(this);
                }
                return this.mUIItemWindow23;
            }
        }
        
        public UIItemWindow24 UIItemWindow24
        {
            get
            {
                if ((this.mUIItemWindow24 == null))
                {
                    this.mUIItemWindow24 = new UIItemWindow24(this);
                }
                return this.mUIItemWindow24;
            }
        }
        
        public UIItemWindow25 UIItemWindow25
        {
            get
            {
                if ((this.mUIItemWindow25 == null))
                {
                    this.mUIItemWindow25 = new UIItemWindow25(this);
                }
                return this.mUIItemWindow25;
            }
        }
        
        public UIItemWindow26 UIItemWindow26
        {
            get
            {
                if ((this.mUIItemWindow26 == null))
                {
                    this.mUIItemWindow26 = new UIItemWindow26(this);
                }
                return this.mUIItemWindow26;
            }
        }
        
        public UIItemWindow27 UIItemWindow27
        {
            get
            {
                if ((this.mUIItemWindow27 == null))
                {
                    this.mUIItemWindow27 = new UIItemWindow27(this);
                }
                return this.mUIItemWindow27;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow10;
        
        private UIItemWindow11 mUIItemWindow11;
        
        private UIItemWindow12 mUIItemWindow12;
        
        private UIItemWindow13 mUIItemWindow13;
        
        private UIItemWindow14 mUIItemWindow14;
        
        private UIItemWindow15 mUIItemWindow15;
        
        private UIItemWindow16 mUIItemWindow16;
        
        private UIItemWindow17 mUIItemWindow17;
        
        private UIItemWindow18 mUIItemWindow18;
        
        private UIItemWindow19 mUIItemWindow19;
        
        private UIItemWindow20 mUIItemWindow20;
        
        private UIItemWindow21 mUIItemWindow21;
        
        private UIItemWindow22 mUIItemWindow22;
        
        private UIItemWindow23 mUIItemWindow23;
        
        private UIItemWindow24 mUIItemWindow24;
        
        private UIItemWindow25 mUIItemWindow25;
        
        private UIItemWindow26 mUIItemWindow26;
        
        private UIItemWindow27 mUIItemWindow27;
        
        private UIItem0Window mUIItem0Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "84";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIDecimalseparatorButton
        {
            get
            {
                if ((this.mUIDecimalseparatorButton == null))
                {
                    this.mUIDecimalseparatorButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDecimalseparatorButton.SearchProperties[WinButton.PropertyNames.Name] = "Decimal separator";
                    this.mUIDecimalseparatorButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIDecimalseparatorButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDecimalseparatorButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "94";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UISubtractButton
        {
            get
            {
                if ((this.mUISubtractButton == null))
                {
                    this.mUISubtractButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISubtractButton.SearchProperties[WinButton.PropertyNames.Name] = "Subtract";
                    this.mUISubtractButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUISubtractButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISubtractButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "92";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMultiplyButton
        {
            get
            {
                if ((this.mUIMultiplyButton == null))
                {
                    this.mUIMultiplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMultiplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Multiply";
                    this.mUIMultiplyButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMultiplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMultiplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "91";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIDivideButton
        {
            get
            {
                if ((this.mUIDivideButton == null))
                {
                    this.mUIDivideButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDivideButton.SearchProperties[WinButton.PropertyNames.Name] = "Divide";
                    this.mUIDivideButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIDivideButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDivideButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "114";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIReciprocalButton
        {
            get
            {
                if ((this.mUIReciprocalButton == null))
                {
                    this.mUIReciprocalButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIReciprocalButton.SearchProperties[WinButton.PropertyNames.Name] = "Reciprocal";
                    this.mUIReciprocalButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIReciprocalButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIReciprocalButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow17 : WinWindow
    {
        
        public UIItemWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "118";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIPercentageButton
        {
            get
            {
                if ((this.mUIPercentageButton == null))
                {
                    this.mUIPercentageButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPercentageButton.SearchProperties[WinButton.PropertyNames.Name] = "Percentage";
                    this.mUIPercentageButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIPercentageButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPercentageButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "110";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UISquarerootButton
        {
            get
            {
                if ((this.mUISquarerootButton == null))
                {
                    this.mUISquarerootButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISquarerootButton.SearchProperties[WinButton.PropertyNames.Name] = "Square root";
                    this.mUISquarerootButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUISquarerootButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISquarerootButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "80";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UINegateButton
        {
            get
            {
                if ((this.mUINegateButton == null))
                {
                    this.mUINegateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINegateButton.SearchProperties[WinButton.PropertyNames.Name] = "Negate";
                    this.mUINegateButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUINegateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINegateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "81";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WinButton.PropertyNames.Name] = "Clear";
                    this.mUIClearButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIClearButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "82";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIClearentryButton
        {
            get
            {
                if ((this.mUIClearentryButton == null))
                {
                    this.mUIClearentryButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearentryButton.SearchProperties[WinButton.PropertyNames.Name] = "Clear entry";
                    this.mUIClearentryButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIClearentryButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIClearentryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "83";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIBackspaceButton
        {
            get
            {
                if ((this.mUIBackspaceButton == null))
                {
                    this.mUIBackspaceButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBackspaceButton.SearchProperties[WinButton.PropertyNames.Name] = "Backspace";
                    this.mUIBackspaceButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIBackspaceButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBackspaceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "126";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMemorysubtractButton
        {
            get
            {
                if ((this.mUIMemorysubtractButton == null))
                {
                    this.mUIMemorysubtractButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMemorysubtractButton.SearchProperties[WinButton.PropertyNames.Name] = "Memory subtract";
                    this.mUIMemorysubtractButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMemorysubtractButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMemorysubtractButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "125";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMemoryaddButton
        {
            get
            {
                if ((this.mUIMemoryaddButton == null))
                {
                    this.mUIMemoryaddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMemoryaddButton.SearchProperties[WinButton.PropertyNames.Name] = "Memory add";
                    this.mUIMemoryaddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMemoryaddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMemoryaddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow25 : WinWindow
    {
        
        public UIItemWindow25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "124";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMemorystoreButton
        {
            get
            {
                if ((this.mUIMemorystoreButton == null))
                {
                    this.mUIMemorystoreButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMemorystoreButton.SearchProperties[WinButton.PropertyNames.Name] = "Memory store";
                    this.mUIMemorystoreButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMemorystoreButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMemorystoreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow26 : WinWindow
    {
        
        public UIItemWindow26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "123";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMemoryrecallButton
        {
            get
            {
                if ((this.mUIMemoryrecallButton == null))
                {
                    this.mUIMemoryrecallButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMemoryrecallButton.SearchProperties[WinButton.PropertyNames.Name] = "Memory recall";
                    this.mUIMemoryrecallButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMemoryrecallButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMemoryrecallButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow27 : WinWindow
    {
        
        public UIItemWindow27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "122";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIMemoryclearButton
        {
            get
            {
                if ((this.mUIMemoryclearButton == null))
                {
                    this.mUIMemoryclearButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMemoryclearButton.SearchProperties[WinButton.PropertyNames.Name] = "Memory clear";
                    this.mUIMemoryclearButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIMemoryclearButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIMemoryclearButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UIItem0Text
        {
            get
            {
                if ((this.mUIItem0Text == null))
                {
                    this.mUIItem0Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem0Text.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    this.mUIItem0Text.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem0Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem0Text;
        #endregion
    }
}
